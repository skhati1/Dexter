@using System.Reflection;
@using System.Globalization;
@model Pokemon

@{
    ViewData["Title"] = "Pokedex Page";
    var textInfo = new CultureInfo("en-US", false).TextInfo;
}

<div class="text-center">
    <table class="table">
        <tr>
            <td>
                <p>@Model?.Name | @Model?.japanese_name. A @Model?.TypesString Pokemon!</p>
                <img src="@Url.Content(Model?.ImagePath)" alt="Pokemon Image" height="400" width="400" />
            </td>
            <td style="vertical-align: middle">
                <table class="table">
                    <thead>
                        <tr>
                            <td scope="col">HP</td>
                            <td scope="col">Attack</td>
                            <td scope="col">Special Attack</td>
                            <td scope="col">Defense</td>
                            <td scope="col">Special Defense</td>
                            <td scope="col">Speed</td>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td scope="row">@Model?.HP</td>
                            <td scope="row">@Model?.Attack</td>
                            <td scope="row">@Model?.SpecialAttack</td>
                            <td scope="row">@Model?.Defense</td>
                            <td scope="row">@Model?.SpecialDefense</td>
                            <td scope="row">@Model?.Speed</td>
                        </tr>
                    </tbody>
                </table>
            </td>
        </tr>
    </table>
    <p>Height: @Model?.height_m meters | Weight: @Model?.weight_kg kg</p>
    <p>This is a @Model?.classfication</p>
    <p>Capture Rate: @Model?.CaptureRate</p>

    <!-- Use Reflection to Show Weakness and Strengths -->
    
    <table class="table">
        <thead>
            <tr>
                <td>Type</td>
                <td>Effectiveness</td>
            </tr>
        </thead>
    @{Type type = @Model.GetType();}
    @{PropertyInfo[] props = type.GetProperties();}
    @{var matchup = new Dictionary<string, string>();}
    @foreach (var prop in props.Where(p => p.Name.StartsWith("against_")))
    {
        <tr>
            <td>@textInfo.ToTitleCase(prop.Name.Replace("against_", ""))</td>
            <td>x @prop.GetValue(Model)</td>
        </tr>
    }
    </table>
   
</div>
