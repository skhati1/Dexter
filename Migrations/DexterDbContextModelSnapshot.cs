// <auto-generated />
using Dexter;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dexter.Migrations
{
    [DbContext(typeof(DexterDbContext))]
    partial class DexterDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("Dexter.Models.Pokemon", b =>
                {
                    b.Property<int>("pokedex_number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("abilities")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("against_bug")
                        .HasColumnType("REAL");

                    b.Property<double>("against_dark")
                        .HasColumnType("REAL");

                    b.Property<double>("against_dragon")
                        .HasColumnType("REAL");

                    b.Property<double>("against_electric")
                        .HasColumnType("REAL");

                    b.Property<double>("against_fairy")
                        .HasColumnType("REAL");

                    b.Property<double>("against_fight")
                        .HasColumnType("REAL");

                    b.Property<double>("against_fire")
                        .HasColumnType("REAL");

                    b.Property<double>("against_flying")
                        .HasColumnType("REAL");

                    b.Property<double>("against_ghost")
                        .HasColumnType("REAL");

                    b.Property<double>("against_grass")
                        .HasColumnType("REAL");

                    b.Property<double>("against_ground")
                        .HasColumnType("REAL");

                    b.Property<double>("against_ice")
                        .HasColumnType("REAL");

                    b.Property<double>("against_normal")
                        .HasColumnType("REAL");

                    b.Property<double>("against_poison")
                        .HasColumnType("REAL");

                    b.Property<double>("against_psychic")
                        .HasColumnType("REAL");

                    b.Property<double>("against_rock")
                        .HasColumnType("REAL");

                    b.Property<double>("against_steel")
                        .HasColumnType("REAL");

                    b.Property<double>("against_water")
                        .HasColumnType("REAL");

                    b.Property<int>("attack")
                        .HasColumnType("INTEGER");

                    b.Property<int>("base_egg_steps")
                        .HasColumnType("INTEGER");

                    b.Property<int>("base_happiness")
                        .HasColumnType("INTEGER");

                    b.Property<int>("base_total")
                        .HasColumnType("INTEGER");

                    b.Property<int>("capture_rate")
                        .HasColumnType("INTEGER");

                    b.Property<string>("classfication")
                        .HasColumnType("TEXT");

                    b.Property<int>("defense")
                        .HasColumnType("INTEGER");

                    b.Property<int>("experience_growth")
                        .HasColumnType("INTEGER");

                    b.Property<int>("generation")
                        .HasColumnType("INTEGER");

                    b.Property<double>("height_m")
                        .HasColumnType("REAL");

                    b.Property<int>("hp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("is_legendary")
                        .HasColumnType("INTEGER");

                    b.Property<string>("japanese_name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("percentage_male")
                        .HasColumnType("TEXT");

                    b.Property<int>("sp_attack")
                        .HasColumnType("INTEGER");

                    b.Property<int>("sp_defense")
                        .HasColumnType("INTEGER");

                    b.Property<int>("speed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("type1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("type2")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("weight_kg")
                        .HasColumnType("TEXT");

                    b.HasKey("pokedex_number");

                    b.ToTable("Blogs");
                });
#pragma warning restore 612, 618
        }
    }
}
